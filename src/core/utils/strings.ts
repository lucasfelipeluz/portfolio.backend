export default {
  // Models names
  project: 'project',
  skill: 'skill',
  aboutMe: 'about_me',
  user: 'user',
  projectSkill: 'project_skill',
  projectImage: 'project_image',
  skills: 'skills',
  projects: 'projects',
  users: 'users',
  projectImages: 'project_images',
  images: 'images',
  role: 'role',
  roles: 'roles',
  systemVariable: 'system_variable',

  // Models Properties
  idSkill: 'idSkill',
  idProject: 'idProject',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  idRole: 'idRole',

  // Messages
  applicationRunning: 'Application running on port',
  urlNotFound: 'URL not found',
  projectIsCreated: 'Project is created',
  projectIsUpdated: 'Project is updated',
  projectIsDeleted: 'Project is deleted',
  projectNotFound: 'Project not found',
  skillIsCreated: 'Skill is created',
  skillIsUpdated: 'Skill is updated',
  skillIsDeleted: 'Skill is deleted',
  skillNotFound: 'Skill not found',
  projectSkillIsCreated: 'Project Skill is created',
  projectSkillIsUpdated: 'Project Skill is updated',
  projectSkillIsDeleted: 'Project Skill is deleted',
  projectSkillNotFound: 'Project Skill not found',
  projectImageIsCreated: 'Project Image is created',
  projectImageIsUpdated: 'Project Image is updated',
  projectImageIsDeleted: 'Project Image is deleted',
  systemVariableIsCreated: 'System Variable is created',
  systemVariableIsUpdated: 'System Variable is updated',
  systemVariableIsDeleted: 'System Variable is deleted',
  systemVariableNotFound: 'System Variable not found',
  aboutMeIsUpdated: 'About Me is updated',
  aboutMeNotFound: 'About Me not found',

  // Msg Errors
  internalServerError: 'A server error has occurred.',
  AnErrorOccurredWhileSavingTheData: 'An error occurred while saving the data.',
  redisError: 'An error occurred while trying to connect to Redis.',
  notPermissionError: 'You do not have permission to access this resource.',

  // Errors
  applicationError: 'ApplicationError',
  badRequestError: 'BadRequestError',
  forbiddenError: 'ForbiddenError',
  notFoundError: 'NotFoundError',
  notFoundEntityError: 'NotFoundEntityError',
  unauthorizedError: 'UnauthorizedError',
  validationError: 'ValidationError',
};
